<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王立战的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://showcc.github.io/"/>
  <updated>2017-07-21T13:38:19.760Z</updated>
  <id>http://showcc.github.io/</id>
  
  <author>
    <name>Rieko</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端工程</title>
    <link href="http://showcc.github.io/2017/07/21/Front-end%20engineering/"/>
    <id>http://showcc.github.io/2017/07/21/Front-end engineering/</id>
    <published>2017-07-21T09:48:24.592Z</published>
    <updated>2017-07-21T13:38:19.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端工程——基础篇"><a href="#前端工程——基础篇" class="headerlink" title="前端工程——基础篇"></a>前端工程——基础篇</h1><hr>
<p>喂喂喂，那个切图的，把页面写好就发给研发工程师套模板吧。<br>你好，切图仔。<br>不知道你的团队如何定义前端开发，据我所知，时至今日仍然有很多团队会把前端开发归类为产品或者设计岗位，虽然身份之争多少有些无谓，但我对这种偏见还是心存芥蒂，酝酿了许久，决定写一个系列的文章，试着从工程的角度系统的介绍一下我对前端，尤其是Web前端的理解。<br><a id="more"></a><br>只要我们还把自己的工作看作为一项软件开发活动，那么我相信读过下面的内容你也一定会有所共鸣。</p>
<h1 id="前端，是一种GUI软件"><a href="#前端，是一种GUI软件" class="headerlink" title="前端，是一种GUI软件"></a>前端，是一种GUI软件</h1><hr>
<p>现如今前端可谓包罗万象，产品形态五花八门，涉猎极广，什么高大上的基础库/框架，拽炫酷的宣传页面，还有屌炸天的小游戏……不过这些一两个文件的小项目并非是前端技术的主要应用场景，更具商业价值的则是复杂的Web应用，它们功能完善，界面繁多，为用户提供了完整的产品体验，可能是新闻聚合网站，可能是在线购物平台，可能是社交网络，可能是金融信贷应用，可能是音乐互动社区，也可能是视频上传与分享平台……<br><code>从本质上讲，所有Web应用都是一种运行在网页浏览器中的软件，这些软件的图形用户界面（Graphical User Interface，简称GUI）即为前端。</code><br>如此复杂的Web应用，动辄几十上百人共同开发维护，其前端界面通常也颇具规模，工程量不亚于一般的传统GUI软件：</p>
<p><img src="https://show8.github.io/blogimage/G1.png" alt="图1"></p>
<p>尽管Web应用的复杂程度与日俱增，用户对其前端界面也提出了更高的要求，但时至今日仍然没有多少前端开发者会从软件工程的角度去思考前端开发，来助力团队的开发效率，更有甚者还对前端保留着”如玩具般简单“的刻板印象，日复一日，刀耕火种。</p>
<p>历史悠久的前端开发，始终像是放养的野孩子，原始如斯，不免让人慨叹！</p>
<h1 id="前端工程的三个阶段"><a href="#前端工程的三个阶段" class="headerlink" title="前端工程的三个阶段"></a>前端工程的三个阶段</h1><hr>
<p>现在的前端开发倒也并非一无所有，回顾一下曾经经历过或听闻过的项目，为了提升其前端开发效率和运行性能，前端团队的工程建设大致会经历三个阶段：</p>
<h3 id="第一阶段：库-框架选型"><a href="#第一阶段：库-框架选型" class="headerlink" title="第一阶段：库/框架选型"></a>第一阶段：库/框架选型</h3><p><img src="https://show8.github.io/blogimage/G2.png" alt="图2"></p>
<p>前端工程建设的第一项任务就是根据项目特征进行技术选型。</p>
<p>基本上现在没有人完全从0开始做网站，哪怕是政府项目用个jquery都很正常吧，React/Angularjs等框架横空出世，解放了不少生产力，合理的技术选型可以为项目节省许多工程量这点毋庸置疑。</p>
<h3 id="第二阶段：简单构建优化"><a href="#第二阶段：简单构建优化" class="headerlink" title="第二阶段：简单构建优化"></a>第二阶段：简单构建优化</h3><p><img src="https://show8.github.io/blogimage/G3.png" alt="图3"></p>
<p>选型之后基本上就可以开始敲码了，不过光解决开发效率还不够，必须要兼顾运行性能。前端工程进行到第二阶段会选型一种构建工具，对代码进行压缩，校验，之后再以页面为单位进行简单的资源合并。</p>
<p>前端开发工程化程度之低，常常出乎我的意料，我之前在百度工作时是没有多少概念的，直到离开大公司的温室，去到业界与更多的团队交流才发现，能做到这个阶段在业界来说已然超出平均水平，属于“具备较高工程化程度”的团队了，查看网上形形色色的网页源代码，能做到最基本的JS/CSS压缩的Web应用都已跨入标准互联网公司行列，不难理解为什么很多前端团队对于前端工程构建的认知还仅停留在“压缩、校验、合并”这种程度。</p>
<h3 id="第三阶段：JS-CSS模块化开发"><a href="#第三阶段：JS-CSS模块化开发" class="headerlink" title="第三阶段：JS/CSS模块化开发"></a>第三阶段：JS/CSS模块化开发</h3><p><img src="https://show8.github.io/blogimage/G4.png" alt="图4"></p>
<p>分而治之是软件工程中的重要思想，是复杂系统开发和维护的基石，这点放在前端开发中同样适用。在解决了基本开发效率运行效率问题之后，前端团队开始思考维护效率，模块化是目前前端最流行的分治手段。<br>`<br>很多人觉得模块化开发的工程意义是复用，我不太认可这种看法，在我看来，模块化开发的最大价值应该是分治，是分治，分治！（重说三）。</p>
<p>不管你将来是否要复用某段代码，你都有充分的理由将其分治为一个模块。<br>`<br>JS模块化方案很多，AMD/CommonJS/UMD/ES6 Module等，对应的框架和工具也一大堆，说起来很烦，大家自行百度吧；CSS模块化开发基本都是在less、sass、stylus等预处理器的import/mixin特性支持下实现的。</p>
<p>虽然这些技术由来已久，在如今这个“言必及React”的时代略显落伍，但想想业界的绝大多数团队的工程化落后程度，放眼望去，毫不夸张的说，能达到第三阶段的前端团队已属于高端行列，基本具备了开发维护一般规模Web应用的能力。</p>
<p>然而，做到这些就够了么？Naive！</p>
<h3 id="第四阶段"><a href="#第四阶段" class="headerlink" title="第四阶段"></a>第四阶段</h3><p><code>前端是一种技术问题较少、工程问题较多的软件开发领域。</code><br>当我们要开发一款完整的Web应用时，前端将面临更多的工程问题，比如：</p>
<ul>
<li>大体量：多功能、多页面、多状态、多系统；</li>
<li>大规模：多人甚至多团队合作开发；</li>
<li>高性能：CDN部署、缓存控制、文件指纹、缓存复用、请求合并、按需加载、同步/异步加载、移动端首屏CSS内嵌、HTTP 2.0服务端资源推送。</li>
</ul>
<p><code>扩展阅读：大公司里怎样开发和部署前端代码？</code><br>这些无疑是一系列严肃的系统工程问题。</p>
<p>前面讲的三个阶段虽然相比曾经“茹毛饮血”的时代进步不少，但用于支撑第四阶段的多人合作开发以及精细的性能优化似乎还欠缺点什么。</p>
<p>到底，缺什么呢？</p>
<h4 id="没有银弹"><a href="#没有银弹" class="headerlink" title="没有银弹"></a>没有银弹</h4><p>读过<a href="https://book.douban.com/subject/2230248/" target="_blank" rel="external">《人月神话》</a>的人应该都听说过，软件工程 <a href="https://baike.baidu.com/item/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9" target="_blank" rel="external">没有银弹</a>。没错，前端开发同样没有银弹，可是现在是连™铅弹都没有的年月！（刚有了BB弹，摔）</p>
<p>前端历来以“简单”著称，在前端开发者群体中，小而美的价值观占据着主要的话语权，甚至成为了某种信仰，想与其他人交流一下工程方面的心得，得到的回应往往都是两个字：太重。<br><code>重你妹！你的脑容量只有4K吗？</code><br>工程方案其实也可以小而美！只不过它的小而美不是指代码量，而是指“规则”。找到问题的根源，用最少最简单明了的规则制定出最容易遵守最容易理解的开发规范或工具，以提升开发效率和工程质量，这同样是小而美的典范！</p>
<p>2011年我有幸参与到 FIS 项目中，与百度众多大中型项目的前端研发团队共同合作，不断探索实践前端开发的工程化解决方案，13年离开百度去往UC，面对完全不同的产品形态，不同的业务场景，不同的适配终端，甚至不同的网络环境，过往的方法论仍然能够快速落地，为多个团队的不同业务场景量身定制出合理的前端解决方案。</p>
<p>这些经历让我明悟了一个道理：<br><code>进入第四阶段，我们只需做好两件事就能大幅提升前端开发效率，并且兼顾运行性能，那就是——组件化开发与资源管理。</code></p>
<h4 id="第一件事：组件化开发"><a href="#第一件事：组件化开发" class="headerlink" title="第一件事：组件化开发"></a>第一件事：组件化开发</h4><p>分治的确是非常重要的工程优化手段。在我看来，前端作为一种GUI软件，光有JS/CSS的模块化还不够，对于UI组件的分治也有着同样迫切的需求：</p>
<p><img src="https://show8.github.io/blogimage/G5.png" alt="图5"></p>
<p>如上图，这是我所信仰的前端组件化开发理念，简单解读一下：</p>
<ol>
<li>页面上的每个 独立的 可视/可交互区域视为一个组件；</li>
<li>每个组件对应一个工程目录，组件所需的各种资源都在这个目录下就近维护；</li>
<li>由于组件具有独立性，因此组件与组件之间可以 自由组合；</li>
<li>页面只不过是组件的容器，负责组合组件形成功能完整的界面；</li>
<li>当不需要某个组件，或者想要替换组件时，可以整个目录删除/替换。</li>
</ol>
<p>其中第二项描述的就近维护原则，是我觉得最具工程价值的地方，它为前端开发提供了很好的分治策略，每个开发者都将清楚的知道，自己所开发维护的功能单元，其代码必然存在于对应的组件目录中，在那个目录下能找到有关这个功能单元的所有内部逻辑，样式也好，JS也好，页面结构也好，都在那里。</p>
<p>组件化开发具有较高的通用性，无论是前端渲染的单页面应用，还是后端模板渲染的多页面应用，组件化开发的概念都能适用。组件HTML部分根据业务选型的不同，可以是静态的HTML文件，可以是前端模板，也可以是后端模板：</p>
<p><img src="https://show8.github.io/blogimage/G6.png" alt="图6"></p>
<p><code>不同的技术选型决定了不同的组件封装和调用策略。</code><br>基于这样的工程理念，我们很容易将系统以独立的组件为单元进行分工划分：</p>
<p><img src="https://show8.github.io/blogimage/G7.png" alt="图7"></p>
<p>由于系统功能被分治到独立的模块或组件中，粒度比较精细，组织形式松散，开发者之间不会产生开发时序的依赖，大幅提升并行的开发效率，理论上允许随时加入新成员认领组件开发或维护工作，也更容易支持多个团队共同维护一个大型站点的开发。</p>
<p>结合前面提到的模块化开发，整个前端项目可以划分为这么几种开发概念：</p>
<p><img src="https://show8.github.io/blogimage/G8.png" alt="图8"></p>
<p>以上5种开发概念以相对较少的规则组成了前端开发的基本工程结构，基于这些理念，我眼中的前端开发就成了这个样子：</p>
<p><img src="https://show8.github.io/blogimage/G9.png" alt="图9"><br><img src="https://show8.github.io/blogimage/G10.png" alt="图10"><br><img src="https://show8.github.io/blogimage/G11.png" alt="图11"><br><img src="https://show8.github.io/blogimage/G12.png" alt="图12"></p>
<p>综合上面的描述，对于一般中小规模的项目，大致可以规划出这样的源码目录结构：</p>
<p><img src="https://show8.github.io/blogimage/G13.png" alt="图13"></p>
<p>如果项目规模较大，涉及多个团队协作，还可以将具有相关业务功能的页面组织在一起，形成一个子系统，进一步将整个站点拆分出多个子系统来分配给不同团队维护，针对这种情况后面我会单开文章详细介绍。</p>
<p>以上架构设计历经许多不同公司不同业务场景的前端团队验证，收获了不错的口碑，是行之有效的前端工程分治方案。<br><code>吐槽：我本人非常反对某些前端团队将前端开发划分为“JS开发”和“页面重构”两种岗位，更倾向于组件粒度的开发理念，对GUI软件开发的分工规划应该以功能为单位，而不是开发语言；对开发者的技术要求也应该是掌握完整的端内技术。</code></p>
<h4 id="第二件事：“智能”静态资源管理"><a href="#第二件事：“智能”静态资源管理" class="headerlink" title="第二件事：“智能”静态资源管理"></a>第二件事：“智能”静态资源管理</h4><p>上面提到的模块化/组件化开发，仅仅描述了一种开发理念，也可以认为是一种开发规范，倘若你认可这规范，对它的分治策略产生了共鸣，那我们就可以继续聊聊它的具体实现了。</p>
<p>很明显，模块化/组件化开发之后，我们最终要解决的，就是模块/组件加载的技术问题。然而前端与客户端GUI软件有一个很大的不同：<br><code>前端是一种远程部署，运行时增量下载的GUI软件</code><br>前端应用没有安装过程，其所需程序资源都部署在远程服务器，用户使用浏览器访问不同的页面来加载不同的资源，随着页面访问的增加，渐进式的将整个程序下载到本地运行，“增量下载”是前端在工程上有别于客户端GUI软件的根本原因。</p>
<p><img src="https://show8.github.io/blogimage/G14.gif" alt="图14"></p>
<p>上图展示了一款界面繁多功能丰富的应用，如果采用Web实现，相信也是不小的体量，如果用户第一次访问页面就强制其加载全站静态资源再展示，相信会有很多用户因为失去耐心而流失。根据“增量”的原则，我们应该精心规划每个页面的资源加载策略，使得用户无论访问哪个页面都能按需加载页面所需资源，没访问过的无需加载，访问过的可以缓存复用，最终带来流畅的应用体验。</p>
<p>这正是Web应用“免安装”的魅力所在。</p>
<p>由“增量”原则引申出的前端优化技巧几乎成为了性能优化的核心，有加载相关的按需加载、延迟加载、预加载、请求合并等策略；有缓存相关的浏览器缓存利用，缓存更新、缓存共享、非覆盖式发布等方案；还有复杂的BigRender、BigPipe、Quickling、PageCache等技术。这些优化方案无不围绕着如何将增量原则做到极致而展开。</p>
<p>所以我觉得：<br><code>第四阶段前端开发最迫切需要做好的就是在基础架构中贯彻增量原则。</code><br>相信这种贯彻不会随着时间的推移而改变，在可预见的未来，无论在HTTP1.x还是HTTP2.0时代，无论在ES5亦或者ES6/7时代，无论是AMD/CommonJS/UMD亦或者ES6 module时代，无论端内技术如何变迁，我们都有足够充分的理由要做好前端程序资源的增量加载。</p>
<p>正如前面说到的，第三阶段前端工程缺少点什么呢？我觉得是在其基础架构中缺少这样一种“智能”的资源加载方案。没有这样的方案，很难将前端应用的规模发展到第四阶段，很难实现落地前面介绍的那种组件化开发方案，也很难让多方合作高效率的完成一项大型应用的开发，并保证其最终运行性能良好。在第四阶段，我们需要强大的工程化手段来管理”玩具般简单“的前端开发。</p>
<p>在我的印象中，Facebook是这方面探索的伟大先驱之一，早在2010年的<a href="http://velocity.oreilly.com.cn/2010/" target="_blank" rel="external">Velocity</a> China大会上，来自Facebook的David Wei博士就为业界展示了他们令人惊艳的静态网页资源管理和优化技术。</p>
<p>David Wei博士在当年的交流会上提到过一些关于Facebook的一些产品数据：    </p>
<ul>
<li>Facebook整站有10000+个静态资源；</li>
<li>每个静态资源都有可能被翻译成超过100种语言版本；</li>
<li>每种资源又会针对浏览器生成3种不同的版本；</li>
<li>要针对不同带宽的用户做5种不同的打包方法；</li>
<li>有3、4个不同的用户组，用于小批次体验新的产品功能；</li>
<li>还要考虑不同的送达方法，可以直接送达，或者通过iframe的方式提升资源并行加载的速度；</li>
<li>静态资源的压缩和非压缩状态可切换，用于调试和定位线上问题</li>
</ul>
<p>这是一个状态爆炸的问题，将所有状态乘起来，整个网站的资源组合方式会达到几百万种之多（去重之后统计大概有300万种组合方式）。支撑这么大规模前端项目运行的底层架构正是魏博士在那次演讲中分享的Static Resource Management System(静态资源管理系统)，用以解决Facebook项目中有关前端工程的3D问题（Development，Deployment，Debugging）。</p>
<p>那段时间 FIS 项目正好遇到瓶颈，当时的FIS还是一个用php写的task-based构建工具，那时候对于前端工程的认知度很低，觉得前端构建不就是几个压缩优化校验打包任务的组合吗，写好流程调度，就针对不同需求写插件呗，看似非常简单。但当我们支撑越来越多的业务团队，接触到各种不同的业务场景时，我们深刻的感受到task-based工具的粗糙，团队每天疲于根据各种业务场景编写各种打包插件，构建逻辑异常复杂，隐隐看到不可控的迹象。</p>
<p>我们很快意识到把基础架构放到构建工具中实现是一件很愚蠢的事，试图依靠构建工具实现各种优化策略使得构建变成了一个巨大的黑盒，一旦发生问题，定位起来非常困难，而且每种业务场景都有不同的优化需求，构建工具只能通过静态分析来优化加载，具有很大的局限性，单页面/多页面/PC端/移动端/前端渲染/后端渲染/多语言/多皮肤/高级优化等等资源加载问题，总不能给每个都写一套工具吧，更何况这些问题彼此之间还可以有多种组合应用，工具根本写不过来。</p>
<p>Facebook的做法无疑为我们亮起了一盏明灯，不过可惜它并不开源（不是技术封锁，而是这个系统依赖FB体系中的其他方面，通用性不强，开源意义不大），我们只能尝试挖掘相关信息，网上对它的完整介绍还是非常非常少，分析facebook的前端代码也没有太多收获，后来无意中发现了facebook使用的项目管理工具phabricator中的一个静态管理方案Celerity，以及相关的说明，看它的描述很像是Facebook静态资源管理系统的一个mini版！</p>
<p>简单看过整个系统之后发现原理并不复杂（小而美的典范），它是通过一个小工具扫描所有静态资源，生成一张资源表，然后有一个PHP实现的资源管理框架（Celerity）提供了资源加载接口，替代了传统的script/link等静态的资源加载标签，最终通过查表来加载资源。</p>
<p>虽然没有真正看过FB的那套系统，但眼前的这个小小的框架给了当时的我们足够多的启示：<br><code>静态资源管理系统 = 资源表 + 资源加载框架</code><br>多么优雅的实现啊！</p>
<p>资源表是一份数据文件（比如JSON），是项目中所有静态资源（主要是JS和CSS）的构建信息记录，通过构建工具扫描项目源码生成，是一种k-v结构的数据，以每个资源的id为key，记录了资源的类别、部署路径、依赖关系、打包合并等内容，比如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"a.js"</span>: &#123;</div><div class="line">        <span class="string">"url"</span>: <span class="string">"/static/js/a.5f100fa.js"</span>,</div><div class="line">        <span class="string">"dep"</span>: [ <span class="string">"b.js"</span>, <span class="string">"a.css"</span> ]</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"a.css"</span>: &#123;</div><div class="line">        <span class="string">"url"</span>: <span class="string">"/static/css/a.63cf374.css"</span>,</div><div class="line">        <span class="string">"dep"</span>: [ <span class="string">"button.css"</span> ]</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"b.js"</span>: &#123;</div><div class="line">        <span class="string">"url"</span>: <span class="string">"/static/js/b.97193bf.js"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"button.css"</span>: &#123;</div><div class="line">        <span class="string">"url"</span>: <span class="string">"/static/css/button.de33108.css"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>而资源加载框架则提供一些资源引用的API，让开发者根据id来引用资源，替代静态的script/link标签来收集、去重、按需加载资源。调用这些接口时，框架通过查表来查找资源的各项信息，并递归查找其依赖的资源的信息，然后我们可以在这个过程中实现各种性能优化算法来“智能”加载资源。</p>
<p>根据业务场景的不同，加载框架可以在浏览器中用JS实现，也可以是后端模板引擎中用服务端语言实现，甚至二者的组合，不一而足。</p>
<p><img src="https://show8.github.io/blogimage/G15.png" alt="图15"></p>
<p><code>有关加载框架的具体实现我曾写过很多文章介绍，可以扩展阅读：</code></p>
<ul>
<li><a href="https://github.com/fouber/blog/issues/3" target="_blank" rel="external">前端工程与性能优化</a></li>
<li><a href="https://github.com/fouber/blog/issues/4" target="_blank" rel="external">前端工程与模块化框架</a></li>
</ul>
<p>这种设计很快被验证具有足够的灵活性，能够完美支撑不同团队不同技术规范下的性能优化需求，前面提到的按需加载、延迟加载、预加载、请求合并、文件指纹、CDN部署、Bigpipe、Quickling、BigRender、首屏CSS内嵌、HTTP 2.0服务端推送等等性能优化手段都可以很容易的在这种架构上实现，甚至可以根据性能日志自动进行优化（Facebook已实现）。</p>
<p>因为有了资源表，我们可以很方便的控制资源加载，通过各种手段在运行时计算页面的资源使用情况，从而获得最佳加载性能。无论是前端渲染的单页面应用，还是后端渲染的多页面应用，这种方法都同样适用。</p>
<p>此外，它还很巧妙的约束了构建工具的职责——只生成资源表。资源表是非常通用的数据结构，无论什么业务场景，其业务代码最终都可以被扫描为相同结构的表数据，并标记资源间的依赖关系，有了表之后我们只需根据不同的业务场景定制不同的资源加载框架就行了，从此彻底告别一个团队维护一套工具的时代！！！</p>
<p><img src="https://show8.github.io/blogimage/G16.png" alt="图16"></p>
<p><code>恩，如你所见，虽然彻底告别了一个团队一套工具的时代，但似乎又进入了一个团队一套框架的时代。其实还是有差别的，因为框架具有很大的灵活性，而且不那么黑盒，采用框架实现资源管理相比构建更容易调试、定位和升级变更。</code></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><hr>
<p>回顾一下前面提到过的前端工程三个阶段：</p>
<ul>
<li>第一阶段：库/框架选型</li>
<li>第二阶段：简单构建优化</li>
<li>第三阶段：JS/CSS模块化开发</li>
</ul>
<p>现在补充上第四阶段：</p>
<ul>
<li>第四阶段：组件化开发与资源管理</li>
</ul>
<p>由于先天缺陷，<code>前端相比其他软件开发，在基础架构上更加迫切的需要组件化开发和资源管理，</code>而解决资源管理的方法其实一点也不复杂：<br><code>一个通用的资源表生成工具 + 基于表的资源加载框架</code></p>
<p>近几年来各种你听到过的各种资源加载优化策略大部分都可以在这样一套基础上实现，而这种优化对于业务来说是完全透明的，不需要重构的性能优化——这不正是我们一直所期盼的吗？正如魏小亮博士所说：我们可以把优秀的人集中起来去优化加载。</p>
<p>如何选型技术、如何定制规范、如何分治系统、如何优化性能、如何加载资源，当你从切图开始转变为思考这些问题的时候，我想说：</p>
<p>你好，工程师！</p>
<p>前端工程其实是一个很大的话题，开发仅是其中的一部分。</p>
<p>转自：<a href="https://github.com/fouber/blog/blob/master/201508/01.md#" target="_blank" rel="external">https://github.com/fouber/blog/blob/master/201508/01.md#</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前端工程——基础篇&quot;&gt;&lt;a href=&quot;#前端工程——基础篇&quot; class=&quot;headerlink&quot; title=&quot;前端工程——基础篇&quot;&gt;&lt;/a&gt;前端工程——基础篇&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;喂喂喂，那个切图的，把页面写好就发给研发工程师套模板吧。&lt;br&gt;你好，切图仔。&lt;br&gt;不知道你的团队如何定义前端开发，据我所知，时至今日仍然有很多团队会把前端开发归类为产品或者设计岗位，虽然身份之争多少有些无谓，但我对这种偏见还是心存芥蒂，酝酿了许久，决定写一个系列的文章，试着从工程的角度系统的介绍一下我对前端，尤其是Web前端的理解。&lt;br&gt;
    
    </summary>
    
    
      <category term="前端工程" scheme="http://showcc.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="三个阶段" scheme="http://showcc.github.io/tags/%E4%B8%89%E4%B8%AA%E9%98%B6%E6%AE%B5/"/>
    
  </entry>
  
  <entry>
    <title>随手记（问题总结）</title>
    <link href="http://showcc.github.io/2017/07/13/With%20the%20notes/"/>
    <id>http://showcc.github.io/2017/07/13/With the notes/</id>
    <published>2017-07-13T01:38:46.537Z</published>
    <updated>2017-08-11T14:58:10.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总结下开发时候随手记的一些东西，以后方便查找"><a href="#总结下开发时候随手记的一些东西，以后方便查找" class="headerlink" title="总结下开发时候随手记的一些东西，以后方便查找"></a>总结下开发时候随手记的一些东西，以后方便查找</h2><hr>
<p><img src="https://show8.github.io/blogimage/suibi.jpg" alt="图片1"><br><a id="more"></a></p>
<ol>
<li>display:table-cell——————display:table-cell属性指让标签元素以表格单元格的形式呈现，类似于td标签。</li>
<li>tap-highlight-color——————设置或检索对象的轻按时高亮。 当用户轻按一个链接或者JavaScript可点击元素时给元素覆盖一个高亮色 如果想取消这个高亮，将值设置为全透明即可，比如transparent</li>
<li>-webkit-appearance: none; 去掉ios的input阴影</li>
<li><p>移动端触摸事件</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.WL_xinjian'</span>).bind(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		$(<span class="keyword">this</span>).css(<span class="string">'background'</span>,<span class="string">'#d9d9d9'</span>);</div><div class="line">	&#125;);</div><div class="line">	$(<span class="string">'.WL_xinjian'</span>).bind(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		$(<span class="keyword">this</span>).css(<span class="string">'background'</span>,<span class="string">'#fff'</span>);</div><div class="line">	&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>手机端的轮播图 初始化switch</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//observer: true, //修改swiper自己或子元素时，自动初始化swiper</span></div><div class="line"><span class="comment">//observeParents: true, //修改swiper的父元素时，自动初始化swipe</span></div><div class="line">preventClicks : <span class="literal">false</span>,  <span class="comment">//当swiper在触摸时阻止默认事件（preventDefault），用于防止触摸时触发链接跳转。</span></div><div class="line">preventLinksPropagation : <span class="literal">true</span>,  <span class="comment">//阻止click冒泡。拖动Swiper时阻止click事件。</span></div><div class="line">width : <span class="built_in">window</span>.innerWidth,  </div><div class="line"><span class="attr">observer</span> : <span class="literal">true</span>  <span class="comment">//当改变swiper的样式（例如隐藏/显示）或者修改swiper的子元素时，自动初始化swiper</span></div></pre></td></tr></table></figure>
</li>
<li><p>微信端图片缩放</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'body'</span>).on(<span class="string">'click'</span>,<span class="string">'img'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"> <span class="keyword">var</span> imgs=<span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">   	  <span class="keyword">var</span> nowImgurl=<span class="string">""</span>;</div><div class="line"><span class="keyword">var</span> imgObj=<span class="built_in">document</span>.getElementsByTagName(<span class="string">'img'</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;imgObj.length; i++)</div><div class="line">      &#123;</div><div class="line">        imgs.push(imgObj[i].src); </div><div class="line">      &#125;</div><div class="line">        nowImgurl = <span class="keyword">this</span>.src;</div><div class="line">         	 WeixinJSBridge.invoke(<span class="string">"imagePreview"</span>,&#123;</div><div class="line">            <span class="string">"urls"</span>:imgs,</div><div class="line">            <span class="string">"current"</span>:nowImgurl</div><div class="line">            &#125;)</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>网站设计之常见简单实用的JavaScript特效总结（上篇）— <a href="http://click.aliyun.com/m/16034/" target="_blank" rel="external">http://click.aliyun.com/m/16034/</a><br>【javascript】typeof和instanceof的关系 — <a href="http://click.aliyun.com/m/16032/" target="_blank" rel="external">http://click.aliyun.com/m/16032/</a><br>【JavaScript】js中与变量相关的一些知识 — <a href="http://click.aliyun.com/m/16012/" target="_blank" rel="external">http://click.aliyun.com/m/16012/</a><br>31款轻量高效的开源<em>JavaScript</em>插件和库 — <a href="http://click.aliyun.com/m/16035/" target="_blank" rel="external">http://click.aliyun.com/m/16035/</a></p>
</li>
<li><p>HTML5 data-* 自定义属性<br>1.设置方法<br>A.直接在标签内书写，格式如下</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">data-age</span>=<span class="string">"24"</span>&gt;</span></div><div class="line">    Click Here</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).on(<span class="string">"pagecreate"</span>,<span class="string">"#pageone"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   <span class="comment">// jQuery 事件...</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>监测上滑下滑</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">	<span class="keyword">var</span> startX = <span class="number">0</span>,</div><div class="line">        startY = <span class="number">0</span>;</div><div class="line">   <span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">   		 x=event.touches[<span class="number">0</span>].pageX;</div><div class="line">   		 y=event.touches[<span class="number">0</span>].pageY;</div><div class="line">   		startX=x;</div><div class="line">   		startY=y;</div><div class="line">   &#125;,<span class="literal">false</span>);</div><div class="line"></div><div class="line">   <span class="built_in">document</span>.addEventListener(<span class="string">'touchmove'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="comment">// 	alert(1)</span></div><div class="line">   		x=event.touches[<span class="number">0</span>].pageX;</div><div class="line">   		y=event.touches[<span class="number">0</span>].pageY;</div><div class="line">   		</div><div class="line">   		<span class="keyword">if</span>($(<span class="string">'.content'</span>).scrollTop()&gt;<span class="number">50</span>)</div><div class="line">   			<span class="keyword">if</span> (y - startY&gt;<span class="number">0</span>) &#123;</div><div class="line"><span class="comment">//          下滑</span></div><div class="line">				$(<span class="string">'.W_jd1_parent'</span>).animate(&#123;<span class="string">'top'</span>:<span class="number">0</span>&#125;,<span class="number">1000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">						$(<span class="string">'.content'</span>).css(<span class="string">'top'</span>,$(<span class="string">'.bar'</span>).height());</div><div class="line">					&#125;);</div><div class="line">	        &#125;<span class="keyword">else</span>&#123;</div><div class="line">	<span class="comment">//      	上滑</span></div><div class="line">				$(<span class="string">'.W_jd1_parent'</span>).animate(&#123;<span class="string">'top'</span>:<span class="number">-100</span>&#125;,<span class="number">1000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">						$(<span class="string">'.content'</span>).css(<span class="string">'top'</span>,<span class="number">0</span>);</div><div class="line">					&#125;);</div><div class="line">	        &#125;</div><div class="line">   &#125;,<span class="literal">false</span>);</div><div class="line">	<span class="built_in">document</span>.addEventListener(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		x=event.touches[<span class="number">0</span>].pageX;</div><div class="line">   		y=event.touches[<span class="number">0</span>].pageY;</div><div class="line">		<span class="keyword">if</span>($(<span class="string">'.content'</span>).scrollTop()&gt;<span class="number">50</span>)</div><div class="line">   		&#123;&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>CSS文本超出2行就隐藏并且显示省略号</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">        <span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>; </div><div class="line">        <span class="selector-tag">text-overflow</span><span class="selector-pseudo">:ellipsis</span>;</div><div class="line">        <span class="selector-tag">display</span><span class="selector-pseudo">:-webkit-box</span>; </div><div class="line"><span class="selector-tag">-webkit-box-orient</span><span class="selector-pseudo">:vertical</span>;</div><div class="line"><span class="selector-tag">-webkit-line-clamp</span><span class="selector-pseudo">:2</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>不定宽高 让div或者 文字居中</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">        <span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;</div><div class="line">        <span class="selector-tag">width</span>: 100%;</div><div class="line">        <span class="selector-tag">top</span><span class="selector-pseudo">:50</span>%;</div><div class="line">        <span class="selector-tag">left</span><span class="selector-pseudo">:50</span>%;</div><div class="line"><span class="selector-tag">-webkit-transform</span><span class="selector-pseudo">:translate(-50</span>%,<span class="selector-tag">-50</span>%);</div></pre></td></tr></table></figure>
</li>
<li><p>模糊背景</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">-webkit-filter</span>: <span class="selector-tag">blur</span>(10<span class="selector-tag">px</span>); <span class="comment">/* Chrome, Opera */</span></div><div class="line">   <span class="selector-tag">-moz-filter</span>: <span class="selector-tag">blur</span>(10<span class="selector-tag">px</span>);</div><div class="line">    <span class="selector-tag">-ms-filter</span>: <span class="selector-tag">blur</span>(10<span class="selector-tag">px</span>);    </div><div class="line">        <span class="selector-tag">filter</span>: <span class="selector-tag">blur</span>(10<span class="selector-tag">px</span>);</div></pre></td></tr></table></figure>
</li>
<li><p>span写购物车右上角 圆形 红色的玩意er</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</div><div class="line"><span class="selector-tag">top</span>: <span class="selector-class">.1rem</span>;</div><div class="line"><span class="selector-tag">left</span>: 50%;</div><div class="line"><span class="selector-tag">z-index</span>: 100;</div><div class="line"><span class="selector-tag">min-width</span>: <span class="selector-class">.8rem</span>;</div><div class="line"><span class="selector-tag">height</span>: <span class="selector-class">.8rem</span>;</div><div class="line"><span class="selector-tag">padding</span>: 0 <span class="selector-class">.2rem</span>;</div><div class="line"><span class="selector-tag">margin-left</span>: <span class="selector-class">.1rem</span>;</div><div class="line"><span class="selector-tag">font-size</span>: <span class="selector-class">.6rem</span>;</div><div class="line"><span class="selector-tag">line-height</span>: <span class="selector-class">.8rem</span>;</div><div class="line"><span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</div><div class="line"><span class="selector-tag">vertical-align</span>: <span class="selector-tag">top</span>;</div><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">red</span>;</div><div class="line"><span class="selector-tag">border-radius</span>: <span class="selector-class">.5rem</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>修改placeholder样式</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;  </div><div class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line"><span class="attribute">color</span>: <span class="number">#7d6856</span>;</div><div class="line">&#125; </div><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-ms-input-placeholder</span> &#123;  </div><div class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line"><span class="attribute">color</span>: <span class="number">#7d6856</span>;</div><div class="line">&#125; </div><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-o-input-placeholder</span> &#123;  </div><div class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line"><span class="attribute">color</span>: <span class="number">#7d6856</span>;</div><div class="line">&#125; </div><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;  </div><div class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line"><span class="attribute">color</span>: <span class="number">#7d6856</span>;</div><div class="line">&#125; </div><div class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::input-placeholder</span> &#123;  </div><div class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line"><span class="attribute">color</span>: <span class="number">#7d6856</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>禁止选中</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">moz-user-select</span>: <span class="selector-tag">-moz-none</span>;</div><div class="line"><span class="selector-tag">-moz-user-select</span>: <span class="selector-tag">none</span>;</div><div class="line"><span class="selector-tag">-o-user-select</span><span class="selector-pseudo">:none</span>;</div><div class="line"><span class="selector-tag">-khtml-user-select</span><span class="selector-pseudo">:none</span>;</div><div class="line"><span class="selector-tag">-webkit-user-select</span><span class="selector-pseudo">:none</span>;</div><div class="line"><span class="selector-tag">-ms-user-select</span><span class="selector-pseudo">:none</span>;</div><div class="line"><span class="selector-tag">user-select</span><span class="selector-pseudo">:none</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>设置或检索对象的轻按时高亮。当用户轻按一个链接或者JavaScript可点击元素时给元素覆盖一个高亮色如果想取消这个高亮，将值设置为全透明即可，比如transparent</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">tap-highlight-color</span>：</div><div class="line"><span class="selector-class">.demo1</span> &#123;</div><div class="line">    <span class="attribute">-webkit-tap-highlight-color</span>: red;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.demo2</span> &#123;</div><div class="line">    <span class="attribute">-webkit-tap-highlight-color</span>: red;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>live()为动态创建的DOM加事件时候使用,off()取消事件<br>移除所有 </p><p> 元素上的 click 事件：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   $(<span class="string">"p"</span>).off(<span class="string">"click"</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7&quot;&gt;</code><br>#以上代码告诉IE浏览器，无论是否用DTD声明文档标准，IE8/9都会以IE7引擎来渲染页面。<br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=8&quot;&gt;</code><br>#以上代码告诉IE浏览器，IE8/9都会以IE8引擎来渲染页面。<br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</code><br>#以上代码告诉IE浏览器，IE8/9及以后的版本都会以最高版本IE来渲染页面。<br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7,IE=9&quot;&gt;</code><br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=7,9&quot;&gt;</code><br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;</code><br>#以上代码IE=edge告诉IE使用最新的引擎渲染网页，chrome=1则可以激活Chrome Frame.</p>
</li>
<li><p>object-fit 类似于background-size：cover;  object-position 图片img图片控制大小位置</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">object-position</span>: 100% 100%;</div><div class="line"><span class="selector-class">.fill</span> &#123; <span class="attribute">object-fit</span>: fill; &#125;</div><div class="line"><span class="selector-class">.contain</span> &#123; <span class="attribute">object-fit</span>: contain; &#125;</div><div class="line"><span class="selector-class">.cover</span> &#123; <span class="attribute">object-fit</span>: cover; &#125;</div><div class="line"><span class="selector-class">.none</span> &#123; <span class="attribute">object-fit</span>: none; &#125;</div><div class="line"><span class="selector-class">.scale-down</span> &#123; <span class="attribute">object-fit</span>: scale-down; &#125;</div></pre></td></tr></table></figure>
<p>fill: 中文释义“填充”。默认值。替换内容拉伸填满整个content box, 不保证保持原有的比例。<br>contain: 中文释义“包含”。保持原有尺寸比例。保证替换内容尺寸一定可以在容器里面放得下。因此，此参数可能会在容器内留下空白。<br>cover: 中文释义“覆盖”。保持原有尺寸比例。保证替换内容尺寸一定大于容器尺寸，宽度和高度至少有一个和容器一致。因此，此参数可能会让替换内容（如图片）部分区域不可见。<br>none: 中文释义“无”。保持原有尺寸比例。同时保持替换内容原始尺寸大小。<br>scale-down: 中文释义“降低”。就好像依次设置了none或contain, 最终呈现的是尺寸比较小的那个。</p>
</li>
<li><p>CSS hack方式一：条件注释法<br>这种方式是IE浏览器专有的Hack方式，微软官方推荐使用的hack方式。举例如下</p>
<p>只在IE下生效</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> IE]&gt;</div><div class="line">这段文字只在IE浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p>只在IE6下生效</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> IE <span class="number">6</span>]&gt;</div><div class="line">这段文字只在IE6浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p>只在IE6以上版本生效</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> gte IE <span class="number">6</span>]&gt;</div><div class="line">这段文字只在IE6以上(包括)版本IE浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p>只在IE8上不生效</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> ! IE <span class="number">8</span>]&gt;</div><div class="line">这段文字在非IE8浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<p>非IE浏览器生效</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--[<span class="keyword">if</span> !IE]&gt;</div><div class="line">这段文字只在非IE浏览器显示</div><div class="line">&lt;![endif]--&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>background-attachment属性设置背景图像是否固定或者随着页面的其余部分滚动，当设置为fixed时页面的其余部分滚动时，背景图像不会移动。</p>
</li>
<li><p>判断ie6789</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(navigator.appName == <span class="string">"Microsoft Internet Explorer"</span> &amp;&amp; navigator.appVersion .split(<span class="string">";"</span>)[<span class="number">1</span>].replace(<span class="regexp">/[ ]/g</span>,<span class="string">""</span>)==<span class="string">"MSIE6.0"</span>) </div><div class="line">&#123; </div><div class="line"><span class="comment">// alert("IE 6.0"); </span></div><div class="line">&#125; </div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(navigator.appName == <span class="string">"Microsoft Internet Explorer"</span> &amp;&amp; navigator.appVersion .split(<span class="string">";"</span>)[<span class="number">1</span>].replace(<span class="regexp">/[ ]/g</span>,<span class="string">""</span>)==<span class="string">"MSIE7.0"</span>) </div><div class="line">&#123; </div><div class="line"><span class="comment">// alert("IE 7.0"); </span></div><div class="line">&#125; </div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(navigator.appName == <span class="string">"Microsoft Internet Explorer"</span> &amp;&amp; navigator.appVersion .split(<span class="string">";"</span>)[<span class="number">1</span>].replace(<span class="regexp">/[ ]/g</span>,<span class="string">""</span>)==<span class="string">"MSIE8.0"</span>) </div><div class="line">&#123; </div><div class="line"><span class="comment">// alert("IE 8.0"); </span></div><div class="line"> <span class="comment">// alert('您的浏览器版本过低,请升级到IE9.0以上版本或者使用其他浏览器')	</span></div><div class="line">&#125; </div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(navigator.appName == <span class="string">"Microsoft Internet Explorer"</span> &amp;&amp; navigator.appVersion .split(<span class="string">";"</span>)[<span class="number">1</span>].replace(<span class="regexp">/[ ]/g</span>,<span class="string">""</span>)==<span class="string">"MSIE9.0"</span>) </div><div class="line">&#123; </div><div class="line"><span class="comment">// alert("IE 9.0"); </span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>kbd标签标签定义键盘文本<br>pre 元素可定义预格式化的文本 代码啥格式 输出就是什么格式<br>samp 标签表示一段用户应该对其没有什么其他解释的文本字符。要从正常的上下文抽取这些字符时，通常要用到这个标签。<br>var 标签表示变量的名称，或者由用户提供的值。</p>
</li>
<li><p>简单的打字动画效果</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="css"></span></div><div class="line">	@<span class="keyword">keyframes</span> typing &#123; <span class="selector-tag">from</span> &#123; <span class="attribute">width</span>: <span class="number">0</span>; &#125; &#125;</div><div class="line">	@<span class="keyword">keyframes</span> blink-caret &#123; 50% &#123; <span class="attribute">border-color</span>: transparent; &#125; &#125;</div><div class="line">	<span class="selector-tag">h1</span> &#123; </div><div class="line">		<span class="attribute">font</span>: bold <span class="number">100%</span>,Consolas;</div><div class="line">		<span class="comment">/*Consolas是一套固定字符宽度的字型，属无衬线字体*/</span></div><div class="line">		<span class="attribute">border-right</span>: <span class="number">2px</span> solid red;</div><div class="line">		<span class="comment">/*width: 16.5em;*/</span> <span class="comment">/* fallback */</span></div><div class="line">		<span class="comment">/*width: 30ch;*/</span> <span class="comment">/* # of chars */</span></div><div class="line">		<span class="comment">/*margin: 2em 1em;*/</span></div><div class="line">		<span class="comment">/*width: 16.5em英文宽度*/</span></div><div class="line">		<span class="attribute">width</span>: <span class="number">29.8em</span>;</div><div class="line">		<span class="comment">/*中文宽度*/</span></div><div class="line">		<span class="attribute">white-space</span>: nowrap;</div><div class="line">		<span class="attribute">overflow</span>: hidden;</div><div class="line">		<span class="attribute">animation</span>: typing <span class="number">10s</span> <span class="built_in">steps</span>(30, start),blink-caret .<span class="number">5s</span> step-end infinite alternate;</div><div class="line">		<span class="comment">/*steps(30, end) 第一个参数30这个动画分30步执行完 第二个start 第一帧是第一步动画结束此时已经出现一个字了  end 第一帧是第一步动画开始*/</span></div><div class="line">		<span class="comment">/*step-start 等同于 steps(10,start) 动画分成10步，动画执行时为开始左侧端点的部分为开始。</span></div><div class="line">		step-end 等同于 steps(10,end) 动画分成10步，动画执行时以结尾端点为开始，默认值为 end。*/</div><div class="line">	&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">h1</span>&gt;</span>王立战好帅 &amp;nbsp; 阿萨德阿萨德<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if($('.jiji').eq(index).is(':hide’))&#123;</div><div class="line">	如果jiji元素此时状态为隐藏</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
<li><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">width=device-width ：表示宽度是设备屏幕的宽度</div><div class="line">initial-scale=1.0 ：表示初始的缩放比例</div><div class="line">minimum-scale=0.5 ：表示最小的缩放比例</div><div class="line">maximum-scale=2.0 ：表示最大的缩放比例</div><div class="line">user-scalable=yes ：表示用户是否可以调整缩放比例</div></pre></td></tr></table></figure>
</li>
<li><p>禁止鼠标右键,f12键</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.oncontextmenu=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>; </div><div class="line">&#125; </div><div class="line">$(<span class="built_in">document</span>).keydown(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span>&#123;</div><div class="line">	e = <span class="built_in">window</span>.event || e || e.which;</div><div class="line">	<span class="keyword">if</span>(e.keyCode==<span class="number">123</span>)&#123;</div><div class="line">		location.href=<span class="string">'https://showcc.github.io'</span>;</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>HTML5 input标签中的required属性，规定必需在提交之前填写输入字段 提示信息。例子：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"demo_form.asp"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></div><div class="line">  Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"usr_name"</span> <span class="attr">required</span>=<span class="string">"required"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>鼠标样式cursor：not-allowed，是一个红色的圈加一个斜杠，表示禁止的意思，似乎IE，chrome firefox 都能够正常显示，很好用。</p>
</li>
<li><p>实现压缩文件下载rar 直接<code>&lt;a href=&quot;BB.rar&quot;&gt;</code>下载</p>
</li>
<li><p>按钮点击时候比较真实的</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"HR_nr_right_a1 button_guan"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/W_guanbi.png"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.HR_nr_right_a1</span>&#123;</div><div class="line">	<span class="attribute">width</span>: <span class="number">123px</span>;</div><div class="line">	<span class="attribute">height</span>: <span class="number">44px</span>;</div><div class="line">	<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</div><div class="line">	<span class="attribute">display</span>: block;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">line-height</span>: <span class="number">44px</span>;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">	<span class="attribute">color</span>: <span class="number">#000000</span>;</div><div class="line">	<span class="attribute">margin</span>: <span class="number">30px</span> auto <span class="number">0</span> auto;</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.button_guan</span> &#123;</div><div class="line">	<span class="attribute">border</span>: none;</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">color</span>: <span class="built_in">rgba</span>(255,255,255,1);</div><div class="line">	<span class="attribute">text-decoration</span>: none;</div><div class="line">	<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(219,87,5,1);</div><div class="line">	<span class="attribute">padding</span>: <span class="number">4px</span>;</div><div class="line">	<span class="attribute">-webkit-border-radius</span>: <span class="number">8px</span>;</div><div class="line">	<span class="attribute">-moz-border-radius</span>: <span class="number">8px</span>;</div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">8px</span>;</div><div class="line">	<span class="attribute">-webkit-box-shadow</span>: <span class="number">0px</span> <span class="number">9px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">9px</span> <span class="number">25px</span> <span class="built_in">rgba</span>(0,0,0,.7);</div><div class="line">	<span class="attribute">-o-box-shadow</span>: <span class="number">0px</span> <span class="number">9px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">9px</span> <span class="number">25px</span> <span class="built_in">rgba</span>(0,0,0,.7);</div><div class="line">	<span class="attribute">-ms-box-shadow</span>: <span class="number">0px</span> <span class="number">9px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">9px</span> <span class="number">25px</span> <span class="built_in">rgba</span>(0,0,0,.7);</div><div class="line">	<span class="attribute">-moz-box-shadow</span>: <span class="number">0px</span> <span class="number">9px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">9px</span> <span class="number">25px</span> <span class="built_in">rgba</span>(0,0,0,.7);</div><div class="line">	<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">9px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">9px</span> <span class="number">25px</span> <span class="built_in">rgba</span>(0,0,0,.7);</div><div class="line">	<span class="attribute">width</span>: <span class="number">123px</span>;</div><div class="line">	<span class="attribute">text-align</span>: center;</div><div class="line">	<span class="attribute">-webkit-transition</span>: all .<span class="number">1s</span> ease;</div><div class="line">	<span class="attribute">-moz-transition</span>: all .<span class="number">1s</span> ease;</div><div class="line">	<span class="attribute">-ms-transition</span>: all .<span class="number">1s</span> ease;</div><div class="line">	<span class="attribute">-o-transition</span>: all .<span class="number">1s</span> ease;</div><div class="line">	<span class="attribute">transition</span>: all .<span class="number">1s</span> ease;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.button_guan</span><span class="selector-pseudo">:active</span> &#123;</div><div class="line">	<span class="attribute">-webkit-box-shadow</span>: <span class="number">0px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">3px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.9);</div><div class="line">	<span class="attribute">-moz-box-shadow</span>: <span class="number">0px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">3px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.9);</div><div class="line">	<span class="attribute">-o-box-shadow</span>: <span class="number">0px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">3px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.9);</div><div class="line">	<span class="attribute">-ms-box-shadow</span>: <span class="number">0px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">3px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.9);</div><div class="line">	<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(219,31,5,1), <span class="number">0px</span> <span class="number">3px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(0,0,0,.9);</div><div class="line">	<span class="attribute">position</span>: relative;</div><div class="line">	<span class="attribute">top</span>: <span class="number">6px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>jQuery delay() 方法    设置延迟时间,对不同的div元素设置延迟</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">"#div1"</span>).delay(<span class="string">"slow"</span>).fadeIn();</div><div class="line">    $(<span class="string">"#div2"</span>).delay(<span class="string">"fast"</span>).fadeIn();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>content-box：<br>padding和border不被包含在定义的width和height之内。对象的实际宽度等于设置的width值和border、padding之和，即 ( Element width = width + border + padding )<br>此属性表现为标准模式下的盒模型。<br><code>.test1{ box-sizing:content-box; width:200px; padding:10px; border:15px solid #eee; }</code> 总width250px；<br>border-box：<br>padding和border被包含在定义的width和height之内。对象的实际宽度就等于设置的width值，即使定义有border和padding也不会改变对象的实际宽度，即 ( Element width = width )<br>此属性表现为怪异模式下的盒模型。<br><code>.test2{ box-sizing:border-box; width:200px; padding:10px; border:15px solid #eee; }</code>  总width 200px；</p>
</li>
<li><p>三等份布局</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">ul &#123; width: 100%;height: 80px;background: pink;display: flex;//重要 父级设置&#125;</div><div class="line">ul li &#123;</div><div class="line">	list-style: none;</div><div class="line">	flex: 1;//*</div><div class="line">	height: 80px;</div><div class="line">	line-height: 80px;</div><div class="line">	font-size: 16px;</div><div class="line">	color: #666;</div><div class="line">	text-align: center;</div><div class="line">      &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>判断鼠标从哪个方向进入–jQuery</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#wrap"</span>).bind(<span class="string">"mouseenter mouseleave"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">       <span class="keyword">var</span> w = $(<span class="keyword">this</span>).width();</div><div class="line">       <span class="keyword">var</span> h = $(<span class="keyword">this</span>).height();</div><div class="line">           <span class="keyword">var</span> x = (e.pageX - <span class="keyword">this</span>.offsetLeft - (w / <span class="number">2</span>)) * (w &gt; h ? (h / w) : <span class="number">1</span>);</div><div class="line">           <span class="keyword">var</span> y = (e.pageY - <span class="keyword">this</span>.offsetTop - (h / <span class="number">2</span>)) * (h &gt; w ? (w / h) : <span class="number">1</span>);</div><div class="line">           <span class="keyword">var</span> direction = <span class="built_in">Math</span>.round((((<span class="built_in">Math</span>.atan2(y, x) * (<span class="number">180</span> / <span class="built_in">Math</span>.PI)) + <span class="number">180</span>) / <span class="number">90</span>) + <span class="number">3</span>) % <span class="number">4</span>; <span class="comment">//direction的值为“0,1,2,3”分别对应着“上，右，下，左”</span></div><div class="line">           <span class="keyword">var</span> eventType = e.type;</div><div class="line">           <span class="keyword">var</span> dirName = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">'上方'</span>,<span class="string">'右侧'</span>,<span class="string">'下方'</span>,<span class="string">'左侧'</span>);</div><div class="line">           <span class="keyword">if</span>(e.type == <span class="string">'mouseenter'</span>)&#123;</div><div class="line">              $(<span class="string">"#result"</span>).html(dirName[direction]+<span class="string">'进入'</span>);</div><div class="line">          &#125;<span class="keyword">else</span>&#123;</div><div class="line">              $(<span class="string">'#result'</span>).html(dirName[direction]+<span class="string">'离开'</span>);</div><div class="line">          &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123; <span class="keyword">if</span>(event.keyCode ==<span class="number">13</span>)&#123;  $(<span class="string">".W-T"</span>).trigger(<span class="string">"click"</span>);&#125;&#125;);<span class="comment">//按enter键提交</span></div><div class="line">$(<span class="string">'.W-T'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;....&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>js随机显示图片  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> images=[<span class="string">'p1.jpg'</span>,<span class="string">'p2.jpg'</span>,<span class="string">'p3.jpg'</span>];</div><div class="line"><span class="keyword">var</span> url=images[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*images.length)];</div><div class="line"><span class="built_in">console</span>.log(url);</div></pre></td></tr></table></figure>
</li>
<li><p>jq获取url </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xx = getUrlParam(<span class="string">'reurl'</span>);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUrlParam</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + name + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>);<span class="comment">//构造一个含有目标参数的正则表达式对象</span></div><div class="line">    <span class="keyword">var</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);<span class="comment">//匹配目标参数</span></div><div class="line">    <span class="keyword">if</span> (r != <span class="literal">null</span>)&#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="string">""</span>;<span class="comment">//返回参数值</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>左侧定宽，右侧自适应<br>第一种：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.one</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">background-color</span>: blue;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.two</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">background-color</span>: red;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>第二种：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.one</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">background-color</span>: blue;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.two</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: auto;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">background-color</span>: red;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;总结下开发时候随手记的一些东西，以后方便查找&quot;&gt;&lt;a href=&quot;#总结下开发时候随手记的一些东西，以后方便查找&quot; class=&quot;headerlink&quot; title=&quot;总结下开发时候随手记的一些东西，以后方便查找&quot;&gt;&lt;/a&gt;总结下开发时候随手记的一些东西，以后方便查找&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://show8.github.io/blogimage/suibi.jpg&quot; alt=&quot;图片1&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="随手记" scheme="http://showcc.github.io/tags/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    
      <category term="问题总结" scheme="http://showcc.github.io/tags/%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>毕业季</title>
    <link href="http://showcc.github.io/2017/06/25/Graduation%20season/"/>
    <id>http://showcc.github.io/2017/06/25/Graduation season/</id>
    <published>2017-06-25T08:37:59.058Z</published>
    <updated>2017-07-13T01:51:35.242Z</updated>
    
    <content type="html"><![CDATA[<p>时光匆匆，当我伸手去拦时，它却如微风般悄悄地从指边溜掉了。<br>我的大学生活就如这流水般缓缓而又匆匆地流淌着到了她的尽头，留给我的，是无尽的感慨收获和即将入海的宽广无限。<br><img src="https://show8.github.io/blogimage/by1.jpg" alt="图1"><br><a id="more"></a><br>毕业季节，愿我们的友谊永远不散。<br>再深情望一眼，曾经充满回忆的校园。<br>回忆终是回忆,到最后发现什么都不会有</p>
<p><img src="https://show8.github.io/blogimage/by2.jpg" alt="图2"></p>
<p>曲终人散,唱不出世间温暖;诩诩文字,写不尽心中悲喜!<br>毕业了，满足是最真实的财富。贪婪是最真实的贫穷<br>毕业了，在那校园里面还残留着我们多少身影，还有多少回忆，而我们却要离开<br>三年的记忆，忘了吧。只为会笑的明天，不带走任何牵连、一点思念。只是不想流泪</p>
<p><img src="https://show8.github.io/blogimage/by4.jpg" alt="图3"></p>
<p>毕业了，青春在无形之中离去，我们即将翻开人生的另一页。<br>毕业了，全心全意却是一生一世。海誓山盟只是一时敷衍。</p>
<p><img src="https://show8.github.io/blogimage/by5.jpg" alt="图4"></p>
<p>在这个初夏。别了母校，别了朋友，别了敬爱的老师。一切来的太快了，我们甚至还没做好准备，已经毕业了，在几年的生涯中有快乐、悲伤的事还来不及回忆，一切结束了。<br>毕业了，也许还会怀念寝室卧谈会那轻松，愉悦的感觉。<br>朋友别哭 我依然是你心灵的归宿。未来我们一起加油。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时光匆匆，当我伸手去拦时，它却如微风般悄悄地从指边溜掉了。&lt;br&gt;我的大学生活就如这流水般缓缓而又匆匆地流淌着到了她的尽头，留给我的，是无尽的感慨收获和即将入海的宽广无限。&lt;br&gt;&lt;img src=&quot;https://show8.github.io/blogimage/by1.jpg&quot; alt=&quot;图1&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://showcc.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="毕业" scheme="http://showcc.github.io/tags/%E6%AF%95%E4%B8%9A/"/>
    
      <category term="2017.06.17" scheme="http://showcc.github.io/tags/2017-06-17/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo，换了电脑怎么更新博客？</title>
    <link href="http://showcc.github.io/2017/06/08/Change%20the%20computer%20update%20the%20hexo%20blog/"/>
    <id>http://showcc.github.io/2017/06/08/Change the computer update the hexo blog/</id>
    <published>2017-06-08T12:30:14.850Z</published>
    <updated>2017-07-13T04:04:45.581Z</updated>
    
    <content type="html"><![CDATA[<p>由于我的博客是在公司电脑上搭建的，一旦离开公司电脑在自己的电脑上更新博客，就要重新配置，到底该怎么配置呢？于是我在网上搜了一番，写下这篇博客，总结一下。</p>
<h3 id="安装-Git，安装Node-js"><a href="#安装-Git，安装Node-js" class="headerlink" title="安装 Git，安装Node.js"></a>安装 Git，安装Node.js</h3><p>首先肯定要先安装Git、Node.js,下面是下载的地址。</p>
<ol>
<li><a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git</a></li>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a><a id="more"></a>
</li>
</ol>
<h3 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h3><p>安装完Git要设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;username&quot;</div><div class="line">$ git config --global user.email &quot;username@example.com&quot;</div></pre></td></tr></table></figure></p>
<h3 id="与github建立联系-设置SSH-keys"><a href="#与github建立联系-设置SSH-keys" class="headerlink" title="与github建立联系-设置SSH keys"></a>与github建立联系-设置SSH keys</h3><p>输入以下指令（邮箱就是你注册Github时候的邮箱）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;show_wlz@163.com&quot;</div></pre></td></tr></table></figure></p>
<p>之后一路回车即可。</p>
<p>完成后，会在用户主目录下生成.ssh目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH key密钥对，<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。打开文件中<code>id_rsa.pub</code>直接复制其内容：</p>
<p><img src="https://show8.github.io/blogimage/hexo5.png" alt="图1"></p>
<p>接着，在GitHub右上方点击头像，选择<code>Settings</code>，在右边的<code>Personal settings</code>侧边栏选择<code>SSH and GPG Keys</code>。接着选择SSH keys右边的<code>New SSH key</code>,其中Title随便写，然后粘贴key，点击”Add key”按钮。最后，测试链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>这时候可能会看到有警告，没事，输入“yes”就好</p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在电脑桌面任意位置点击鼠标右键，选择Git Base。输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>命令中-g是指全局安装hexo。</p>
<h3 id="文件夹拷贝"><a href="#文件夹拷贝" class="headerlink" title="文件夹拷贝"></a>文件夹拷贝</h3><p>安装好后，下面就将原来的文件拷贝到新电脑中，但是要注意哪些文件是必须的，哪些文件是可以删除的。</p>
<ol>
<li>讨论下哪些文件是必须拷贝的：首先是之前自己修改的文件，像站点配置<code>_config.yml</code>，<code>theme文件夹里面的主题</code>，以及<code>source里面自己写的博客文件</code>，这些肯定要拷贝的。除此之外，还有三个文件需要有，就是<code>scaffolds文件夹</code>（文章的模板）、<code>package.json</code>（说明使用哪些包）和<code>.gitignore</code>（限定在提交的时候哪些文件可以忽略）。其实，这三个文件不是我们修改的，所以即使丢失了，也没有关系，我们可以建立一个新的文件夹，然后在里面执行hexo init，就会生成这三个文件，我们只需要将它们拷贝过来使用即可。<br>总结:<code>_config.yml</code>，<code>theme/</code>，<code>source/</code>，<code>scaffolds/</code>，<code>package.json</code>，<code>.gitignore</code>，是需要拷贝的。</li>
<li>再讨论下哪些文件是不必拷贝的，或者说可以删除的：首先是<code>.git文件</code>，无论是在站点根目录下，还是主题目录下的.git文件，都可以删掉。然后是文件夹<code>node_modules</code>（在用npm install会重新生成），<code>public</code>（这个在用hexo g时会重新生成），<code>.deploy_git文件夹</code>（在使用hexo d时也会重新生成），<code>db.json文件</code>。其实上面这些文件也就是是.gitignore文件里面记载的可以忽略的内容。<br>总结：<code>.git/</code>，<code>node_modules/</code>，<code>public/</code>，<code>.deploy_git/</code>，<code>db.json文件</code>需要删除。</li>
</ol>
<h3 id="模块安装"><a href="#模块安装" class="headerlink" title="模块安装"></a>模块安装</h3><p>在新拷贝的文件夹里，右键选择<code>git bash</code>，使用 <code>npm install</code> 命令，进行模块安装。<br>这里不要使用hexo init初始化，因为有的文件我们已经拷贝生成过来了，所以不必用hexo init去整体初始化，如果不慎在此时用了hexo      init，则站点的配置文件_config.yml里面内容会被清空使用默认值，所以这一步一定要慎重，不要用hexo init。</p>
<h3 id="安装一些必要组件"><a href="#安装一些必要组件" class="headerlink" title="安装一些必要组件"></a>安装一些必要组件</h3><p>如果在node_modules里面有的，就不要重复安装了：</p>
<ol>
<li><p>为了使用hexo d来部署到git上，需要安装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
</li>
<li><p>为了建立RSS订阅，需要安装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
</li>
<li><p>为了建立站点地图，需要安装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure>
</li>
</ol>
<p>最后输入以下指令部署到GitHub上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>如果没有出错，恭喜你转移成功！！</p>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>hexo支持更加简单的命令格式了，比如：</p>
<ul>
<li>hexo g == hexo generate</li>
<li>hexo d == hexo deploy</li>
<li>hexo s == hexo server</li>
<li>hexo n == hexo new</li>
</ul>
<h3 id="end"><a href="#end" class="headerlink" title="end"></a>end</h3><p>非常感谢您花时间阅读我的博客，希望对您有所帮助。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于我的博客是在公司电脑上搭建的，一旦离开公司电脑在自己的电脑上更新博客，就要重新配置，到底该怎么配置呢？于是我在网上搜了一番，写下这篇博客，总结一下。&lt;/p&gt;
&lt;h3 id=&quot;安装-Git，安装Node-js&quot;&gt;&lt;a href=&quot;#安装-Git，安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Git，安装Node.js&quot;&gt;&lt;/a&gt;安装 Git，安装Node.js&lt;/h3&gt;&lt;p&gt;首先肯定要先安装Git、Node.js,下面是下载的地址。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://showcc.github.io/tags/Git/"/>
    
      <category term="GitHub" scheme="http://showcc.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://showcc.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Github pages + Hexo 博客 spfk 主题使用LiveRe评论系统</title>
    <link href="http://showcc.github.io/2017/05/28/Hexo-spfk-LiveRe/"/>
    <id>http://showcc.github.io/2017/05/28/Hexo-spfk-LiveRe/</id>
    <published>2017-05-28T01:24:28.409Z</published>
    <updated>2017-06-11T01:42:07.483Z</updated>
    
    <content type="html"><![CDATA[<p>为什么要用Github Page搭建博客，借用<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">阮一峰</a>的话说，喜欢写Blog的人，会经历三个阶段:</p>
<ul>
<li>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。</li>
<li>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。</li>
<li>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</li>
</ul>
<p>哈哈 我目前就处于第一阶段，捣鼓着玩的，整个搭建过程都是照着网上做的，期间也遇到了些问题。第一次接触 <code>GitHub</code>， <code>Github</code>是一个全世界程序员聚集的地方，大家相互分享自己写的代码，提升别人，也提升自己。<br>本文主要是对使用GitHub Pages和Hexo搭建独立博客的一些总结。如果是小白的话，可以先花时间去了解下：<br><a id="more"></a></p>
<ul>
<li><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="external">Git</a> </li>
<li><a href="https://github.com/" target="_blank" rel="external">GitHub</a></li>
<li><a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a></li>
<li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a></li>
<li><a href="http://www.appinn.com/markdown/#autoescape" target="_blank" rel="external">Markdown</a></li>
</ul>
<h3 id="创建对应仓库"><a href="#创建对应仓库" class="headerlink" title="创建对应仓库"></a>创建对应仓库</h3><p>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username是你的账号名)。在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。<br>简单来说，User Pages 与 Project Pages的区别是：</p>
<ol>
<li>User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</li>
<li>用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</li>
<li>User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</li>
<li>User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。</li>
</ol>
<h4 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h4><ul>
<li><a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="external">GitHub Pages Basics / User, Organization, and Project Pages</a></li>
</ul>
<h3 id="安装-Git，安装Node-js"><a href="#安装-Git，安装Node-js" class="headerlink" title="安装 Git，安装Node.js"></a>安装 Git，安装Node.js</h3><ol>
<li><a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git</a></li>
<li><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></li>
</ol>
<h3 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h3><p>安装完Git要设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;username&quot;</div><div class="line">$ git config --global user.email &quot;username@example.com&quot;</div></pre></td></tr></table></figure></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在电脑桌面任意位置点击鼠标右键，选择Git Base。输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>命令中-g是指全局安装hexo。</p>
<p>安装完成后，在你喜爱的文件夹下（如C:\Hexo），在C:\Hexo内点击鼠标右键，选择Git Bash，执行以下指令，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>接下来是安装依赖包,接着输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>现在我们已经搭建起本地的hexo博客了，执行以下命令(在C:\Hexo)，然后到浏览器输入localhost:4000进行本地查看。这个博客只是本地的，别人是浏览不了的，之后需要部署到GitHub上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>到你刚刚创建对应仓库下，点击绿色按钮clone or download，找到以下内容：</p>
<p><img src="https://show8.github.io/blogimage/hexo2.jpg" alt="配置文件图1"></p>
<p>复制里面的地址。然后编辑_config.yml文件（在C:\Hexo下）。</p>
<p><img src="https://show8.github.io/blogimage/hexo3.png" alt="配置文件图2"></p>
<p>修改文件里面的deploy。其中的repository就改成你刚刚复制的地址。保存这个文件。</p>
<p><img src="https://show8.github.io/blogimage/hexo1.png" alt="配置文件图3"></p>
<h3 id="与github建立联系-设置SSH-keys"><a href="#与github建立联系-设置SSH-keys" class="headerlink" title="与github建立联系-设置SSH keys"></a>与github建立联系-设置SSH keys</h3><p>为了能够在本地使用git管理github上的项目，需要进行一些配置，我用的是SSH的方法。在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -al ~/.ssh</div></pre></td></tr></table></figure></p>
<p>如果不存在没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件</p>
<p><img src="https://show8.github.io/blogimage/hexo4.png" alt="配置文件图4"></p>
<p>输入以下指令（邮箱就是你注册Github时候的邮箱）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;show_wlz@163.com&quot;</div></pre></td></tr></table></figure></p>
<p>之后一路回车即可。</p>
<p>然后键入以下指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-agent -s</div></pre></td></tr></table></figure></p>
<p>继续输入指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure></p>
<p>输入之后，在我这里是出错了，不知道你的有没有出错。<br>如果你的也是这样子出错了的话，就输入以下指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">eval `ssh-agent -s`</div><div class="line">ssh-add</div></pre></td></tr></table></figure></p>
<p>其中“`”是<code>esc</code>键下面的。别按错喽！（我错过/(ㄒoㄒ)/~~）</p>
<p>到了这一步，就可以添加SSH key到你的Github账户了。输入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>当然你也可以打开文件直接复制其内容（下图中文件就是刚刚拷贝的Key）：</p>
<p><img src="https://show8.github.io/blogimage/hexo5.png" alt="配置文件图5"></p>
<p>然后，在GitHub右上方点击头像，选择<code>Settings</code>，在右边的<code>Personal settings</code>侧边栏选择<code>SSH and GPG Keys</code>。接着选择SSH keys右边的<code>New SSH key</code>,其中Title随便写，然后粘贴key，点击”Add key”按钮。最后，测试链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>这时候可能会看到有警告，没事，输入“yes”就好。</p>
<p>为了能够使Hexo部署到GitHub上，需要安装一个插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>最后一步，快要成功了，输入以下指令部署到GitHub上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>OK，我们的博客就已经完全搭建起来了，在浏览器输入（当然，是你的用户名）：</p>
<p><a href="https://showcc.github.io/">https://showcc.github.io/</a></p>
<h3 id="安装spfk主题"><a href="#安装spfk主题" class="headerlink" title="安装spfk主题"></a>安装spfk主题</h3><p>在hexo文件夹（C:\Hexo）内点击鼠标右键，选择Git Bash，执行以下指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/luuman/hexo-theme-spfk.git themes/spfk</div></pre></td></tr></table></figure></p>
<p>接着修改hexo根目录下的配置文件 <code>_config.yml</code> 的theme属性即 <code>theme: spfk</code>。其他的主题也类似操作。<br>然后进行更新：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd themes/spfk</div><div class="line">git pull</div></pre></td></tr></table></figure></p>
<p>最后输入以下指令部署到GitHub上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<h3 id="添加来必力评论"><a href="#添加来必力评论" class="headerlink" title="添加来必力评论"></a>添加来必力评论</h3><p>首先进入<a href="https://livere.com/" target="_blank" rel="external">来必力</a>网站进行注册，注册完后，点击导航中的<code>安装</code>，选择<code>City版是一款适合所有人使用的免费版本。</code>点击<code>现在安装</code>,接下来根据自身需要进行一些设置，绑定需要添加来必力评论的网址。并获取代码。<br>打开文件夹<code>hexo\themes\spfk\layout\_partial\comments</code>添加一个文件，这里我命名为<code>livere.ejs</code>，把来必力获取的代码拷贝进去。</p>
<p><img src="https://show8.github.io/blogimage/hexo7.png" alt="添加来必力评论图1"></p>
<p>由于本主题默认是没有来必力评论的，所以要自己进行添加。<br>打开文件夹<code>hexo\themes\spfk\layout\_partial</code>下的<code>article.ejs</code>文件。</p>
<p><img src="https://show8.github.io/blogimage/hexo8.png" alt="添加来必力评论图2"></p>
<p>添加以下内容：</p>
<p><img src="https://show8.github.io/blogimage/hexo6.png" alt="添加来必力评论图3"></p>
<p>打开spfk主题配置文件<code>hexo\themes\spfk</code>下的<code>_config.yml</code>添加<code>livere_uid:xxxxxx</code>。</p>
<p><img src="https://show8.github.io/blogimage/hexo9.png" alt="添加来必力评论图4"></p>
<p>其中的值为来必力获取代码中的<code>data-uid</code>值。</p>
<p><img src="https://show8.github.io/blogimage/hexo9.png" alt="添加来必力评论图5"></p>
<p>最后输入以下指令部署到GitHub上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>OK，来必力评论添加完成，输入网址试试！</p>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>hexo支持更加简单的命令格式了，比如：</p>
<ul>
<li>hexo g == hexo generate</li>
<li>hexo d == hexo deploy</li>
<li>hexo s == hexo server</li>
<li>hexo n == hexo new</li>
</ul>
<h3 id="end"><a href="#end" class="headerlink" title="end"></a>end</h3><p>非常感谢您花时间阅读我的博客，希望对您有所帮助。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么要用Github Page搭建博客，借用&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮一峰&lt;/a&gt;的话说，喜欢写Blog的人，会经历三个阶段:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。&lt;/li&gt;
&lt;li&gt;第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。&lt;/li&gt;
&lt;li&gt;第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈哈 我目前就处于第一阶段，捣鼓着玩的，整个搭建过程都是照着网上做的，期间也遇到了些问题。第一次接触 &lt;code&gt;GitHub&lt;/code&gt;， &lt;code&gt;Github&lt;/code&gt;是一个全世界程序员聚集的地方，大家相互分享自己写的代码，提升别人，也提升自己。&lt;br&gt;本文主要是对使用GitHub Pages和Hexo搭建独立博客的一些总结。如果是小白的话，可以先花时间去了解下：&lt;br&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://showcc.github.io/tags/Git/"/>
    
      <category term="GitHub" scheme="http://showcc.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://showcc.github.io/tags/Hexo/"/>
    
      <category term="spfk" scheme="http://showcc.github.io/tags/spfk/"/>
    
      <category term="LiveRe" scheme="http://showcc.github.io/tags/LiveRe/"/>
    
  </entry>
  
  <entry>
    <title>燕诗示刘叟</title>
    <link href="http://showcc.github.io/2017/05/14/Mother&#39;s%20Day/"/>
    <id>http://showcc.github.io/2017/05/14/Mother&#39;s Day/</id>
    <published>2017-05-14T10:38:35.893Z</published>
    <updated>2017-05-28T09:39:54.643Z</updated>
    
    <content type="html"><![CDATA[<p>A mother’s love is like a circle. It has no begining and no ending.<br><a id="more"></a><br><img src="https://show8.github.io/blogimage/mother.jpg" alt="hello"></p>
<p>梁上有双燕，翩翩雄与雌。</p>
<p>衔泥两椽间，一巢生四儿。</p>
<p>四儿日夜长，索食声孜孜。</p>
<p>青虫不易捕，黄口无饱期。</p>
<p>觜爪虽欲敝，心力不知疲。</p>
<p>须臾十来往，犹恐巢中饥。</p>
<p>辛勤三十日，母瘦雏渐肥。</p>
<p>喃喃教言语，一一刷毛衣。</p>
<p>一旦羽翼成，引上庭树枝。</p>
<p>举翅不回顾，随风四散飞。</p>
<p>雌雄空中鸣，声尽呼不归。</p>
<p>却入空巢里，啁啾终夜悲。</p>
<p>燕燕尔勿悲，尔当返自思。</p>
<p>思尔为雏日，高飞背母时。</p>
<p>当时父母念，今日尔应知。</p>
<p>祝愿天下所有的父母，平安健康 幸福一生！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A mother’s love is like a circle. It has no begining and no ending.&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://showcc.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="母亲节" scheme="http://showcc.github.io/tags/%E6%AF%8D%E4%BA%B2%E8%8A%82/"/>
    
      <category term="诗词" scheme="http://showcc.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>生活</title>
    <link href="http://showcc.github.io/2017/05/10/Life%20emotion/"/>
    <id>http://showcc.github.io/2017/05/10/Life emotion/</id>
    <published>2017-05-10T03:03:04.176Z</published>
    <updated>2017-05-28T09:40:00.614Z</updated>
    
    <content type="html"><![CDATA[<p>Life doesn’t get easier, you just get stronger.</p>
<p>具体也不知道在这里呆了多久</p>
<p>有开心也有难过</p>
<p>有时以为明天会更好，早晨推开窗，发现淅淅沥沥在下着小雨。<br><a id="more"></a><br><img src="https://show8.github.io/blogimage/Life.jpg" alt="hello"></p>
<p>最初</p>
<p>亲人不在身边</p>
<p>没有朋友</p>
<p>没人做伴</p>
<p>兴许习惯了，兴许并不晓得孤单是种什么感觉</p>
<p>后来</p>
<p>认识了新朋友</p>
<p>有人一起逛街，一起吃饭，一起玩耍，</p>
<p>会一起 分享快乐，抚平悲伤，无言时给你一个拥抱。</p>
<p>也许青春就该吵吵闹闹</p>
<p>过了很久</p>
<p>大家都要考虑去留的问题</p>
<p>有人回家嫁人相夫教子</p>
<p>有人离家许久，思乡心切，决定回家</p>
<p>也有人徘徊许久，不知所措</p>
<p>我们来自五湖四海</p>
<p>就此一别</p>
<p>再见太难</p>
<p>小小的我们，在这个世界上微乎其微</p>
<p>想到这，就难免心情低落</p>
<p>也许有人会说你太感性</p>
<p>这本是正常的事情</p>
<p>不必为此伤神</p>
<p>可你任何事都那么理性 的话，你也太不可爱了</p>
<p>如今</p>
<p>一切尚好</p>
<p>有人会走，有人会来</p>
<p>陪你的人很多，不知是不是你想要的那个</p>
<p>开心也好，不开心也罢</p>
<p>一天二十四小时</p>
<p>多相识一秒，你在我心中就多一份重量</p>
<p>不知以后会如何</p>
<p>目前应该还算不错的吧</p>
<p>太远的事情就不愿意去思考那么多了</p>
<p>总之</p>
<p>认真，你就输了</p>
<p>除非你一直认真下去</p>
<p>闲扯颇多，文笔太差，见谅见谅！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Life doesn’t get easier, you just get stronger.&lt;/p&gt;
&lt;p&gt;具体也不知道在这里呆了多久&lt;/p&gt;
&lt;p&gt;有开心也有难过&lt;/p&gt;
&lt;p&gt;有时以为明天会更好，早晨推开窗，发现淅淅沥沥在下着小雨。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://showcc.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="雨" scheme="http://showcc.github.io/tags/%E9%9B%A8/"/>
    
      <category term="生活" scheme="http://showcc.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
